name: Serverless Prod Deployment
on:
  push:
    branches:
      - "main"
      - "master"
concurrency:
  # Cancel in-progress deploys to main branch
  group: ${{ github.ref }}
  cancel-in-progress: true
env:
  DAGSTER_CLOUD_URL: ${{ secrets.DAGSTER_CLOUD_URL }}
  DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}
  ENABLE_FAST_DEPLOYS: 'false' # use the docker image build

jobs:
  dagster_cloud_default_deploy:
    name: Dagster Serverless Deploy
    runs-on: ubuntu-latest
    outputs:
      build_info: ${{ steps.parse-workspace.outputs.build_info }}
    
    steps:
      - name: Parse cloud workspace
        if: env.ENABLE_FAST_DEPLOYS != 'true'
        id: parse-workspace
        uses: dagster-io/dagster-cloud-action/actions/utils/parse_workspace@v0.1
        with:
          dagster_cloud_file: dagster_cloud.yaml

      - name: Checkout
        if: env.ENABLE_FAST_DEPLOYS == 'true'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          path: project-repo
          
      - name: Build and deploy Python executable
        if: env.ENABLE_FAST_DEPLOYS == 'true'
        uses: dagster-io/dagster-cloud-action/actions/build_deploy_python_executable@pex-v0.1
        with:
          dagster_cloud_file: "$GITHUB_WORKSPACE/project-repo/dagster_cloud.yaml"
          build_output_dir: "$GITHUB_WORKSPACE/build"
          python_version: "3.8"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dagster_cloud_docker_deploy:
    name: Dagster Serverless Docker Deploy
    runs-on: ubuntu-latest
    if: needs.dagster_cloud_default_deploy.outputs.build_info
    needs: dagster_cloud_default_deploy
    strategy:
      fail-fast: false
      matrix:
        location: ${{ fromJSON(needs.dagster_cloud_default_deploy.outputs.build_info) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      # add a step to copy the helpers into a sub-directory
      - name: Copy Pkgs
        run: | 
          mkdir ./dagsterproj/pkgs
          cp -r helper-pkg ./dagsterproj/pkgs

      # Uncomment for debug session    
      #- name: Setup Debug Session
      #  uses: csexton/debugger-action@master

      # remainder modified from serverless docker deploy action
      - name: Checkout action repo
        uses: actions/checkout@v3
        with:
          repository: dagster-io/dagster-cloud-action
          path: ./action-repo/

      - name: Get serverless organization info
        uses: ./action-repo/actions/utils/registry_info
        with:
          organization_id: ${{ secrets.ORGANIZATION_ID }}
          deployment: "prod"
        env:
          DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}

      - name: Login to ECR
        run: echo "${{ env.AWS_ECR_PASSWORD }}" | docker login --username ${{ env.AWS_ECR_USERNAME }} --password-stdin ${{  env.REGISTRY_URL  }}
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Copy user code template file
        uses: ./action-repo/actions/utils/copy_template
        with: 
          target_directory: ${{ matrix.location.directory }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.location.directory }}
          push: true
          tags: "${{ env.REGISTRY_URL }}:prod-${{ matrix.location.name }}-${{ github.sha }}"
          labels: |
            branch=${{ github.head_ref }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Dagster Cloud
        uses: ./action-repo/actions/utils/deploy
        id: deploy
        with:
          organization_id: ${{ secrets.ORGANIZATION_ID }}
          deployment: "prod"
          pr: "${{ github.event.number }}"
          location: ${{ toJson(matrix.location) }}
          image_tag: prod-${{ matrix.location.name }}-${{ github.sha }}
          registry: ${{ env.REGISTRY_URL }}
        env:
          DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}

      # - name: Build and deploy to Dagster Cloud serverless
      #   uses: dagster-io/dagster-cloud-action/actions/serverless_prod_deploy@v0.1
      #   with:
      #     dagster_cloud_api_token: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}
      #     location: ${{ toJson(matrix.location) }}
      #     # Uncomment to pass through Github Action secrets as a JSON string of key-value pairs
      #     # env_vars: ${{ toJson(secrets) }}
      #     organization_id: ${{ secrets.ORGANIZATION_ID }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

